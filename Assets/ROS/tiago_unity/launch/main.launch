<?xml version="1.0"?>
<launch>
    <rosparam file="$(find tiago_unity)/config/params.yaml" command="load"/>
    
    <include file="$(find tiago_dual_moveit_config)/launch/planning_context.launch">
    	<arg name="load_robot_description" value="true"/>
	<arg name="end_effector_left"  default="pal-gripper"/>
	<arg name="end_effector_right"  default="pal-gripper"/>
	<arg name="ft_sensor_left"  default="False"/>
    </include>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    	<param name="use_gui" value="false"/>
    	<rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <include file="$(find tiago_dual_moveit_config)/launch/move_group.launch">
	<arg name="end_effector_left"  default="pal-gripper"/>
	<arg name="end_effector_right"  default="pal-gripper"/>
	<arg name="ft_sensor_left"  default="False"/>
        <arg name="allow_trajectory_execution" value="true"/>
    	<arg name="fake_execution" value="true"/>
    	<arg name="info" value="true"/>
    	<arg name="debug" value="false"/>
    </include>

    <node name="motion_planner" pkg="tiago_unity" type="motion_planner.py" args="--limb left --offset 0.2" output="screen"  />

    <node name="server_endpoint" pkg="ros_tcp_endpoint" type="default_server_endpoint.py" args="--wait" output="screen" respawn="true" />

    <!--node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" -->
    
</launch>
